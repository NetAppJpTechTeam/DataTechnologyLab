.. index::
    single: microservice

.. raw::html

このチャプターはドラフト段階です。

=============================================================
Level 5: Microservice化
=============================================================

目的・ゴール:　Microserviceを支えるインフラの技術・テクノロジースタックを活用
=============================================================

Level4までで既存のアプリケーションをコンテナ化して本番運用可能かつ迅速にリリースできる仕組みを作りました。
このレベルではアプリケーションをコンポーネント単位に分割していった際に必要となるインフラの仕組みを適用します。

流れ
=============================================================

#. Microservice化していくにあたって発生する課題
#. 解決する技術の１つ "Istio"


Microservice化していくにあたって発生する課題
=============================================================

マイクロサービス化が進むと１つのシステムを複数の細かいコンポーネントにわけ、独立したサービスとして迅速にデプロイできるようになり、

その反面、モノリスなアプリケーションでは問題とならなかったサービス間の接続、モニタリング、通信の制御、エンドツーエンドの認証などが課題として顕在化してきます。

マイクロサービスを実現するためには上記の課題を解決する必要があります。

解決する技術の１つ "Istio"
=============================================================

ここでは上記の課題を解決するための"Istio"について紹介します。

* https://istio.io/docs/concepts/what-is-istio/overview.html

モノリスなアプリケーションから分散型・コンポーネントに分割されたアプリケーションへコンポーネント分割際に発生する課題に対して有効です。

最初はモノリスなアプリケーションをそのままコンテナ化し徐々にコンポーネントに分けていく、そしてサービス間通信をうまくやるためのServiceMeshとして開発されました。

ポイントはアプリケーションに影響なくIstioを導入できます。



さらなる進化
=============================================================

* マルチクラウド化
* ハイブリッドクラウド化
